"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Vector2d = (function () {
    function Vector2d() {
    }
    Vector2d.add = function (a, b) {
        return { x: a.x + b.x, y: a.y + b.y };
    };
    Vector2d.subtract = function (a, b) {
        return { x: a.x - b.x, y: a.y - b.y };
    };
    Vector2d.compare = function (a, b) {
        return a.x === b.x && a.y === b.y;
    };
    Vector2d.floor = function (a) {
        return { x: Math.floor(a.x), y: Math.floor(a.y) };
    };
    return Vector2d;
}());
exports.Vector2d = Vector2d;
var Rect = (function () {
    function Rect(pos, size) {
        this.pos = pos;
        this.size = size;
    }
    Rect.prototype.hit = function (v) {
        return v.x >= this.pos.x && v.x <= this.pos.x + this.size.x && this.pos.y &&
            v.y <= this.pos.y + this.size.y;
    };
    Object.defineProperty(Rect.prototype, "left", {
        get: function () {
            return this.pos.x;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Rect.prototype, "right", {
        get: function () {
            return this.pos.x + this.size.x;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Rect.prototype, "top", {
        get: function () {
            return this.pos.y;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Rect.prototype, "bottom", {
        get: function () {
            return this.pos.y + this.size.y;
        },
        enumerable: true,
        configurable: true
    });
    Rect.compare = function (a, b) {
        return a.size.x === b.size.x && a.size.y === b.size.y &&
            a.pos.x === b.pos.x && a.pos.y === b.pos.y;
    };
    return Rect;
}());
exports.Rect = Rect;
//# sourceMappingURL=geometry.js.map