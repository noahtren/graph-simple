"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var geometry_1 = require("./geometry");
var constants_1 = require("./constants");
var MenuItem = (function (_super) {
    __extends(MenuItem, _super);
    function MenuItem(props) {
        return _super.call(this, props) || this;
    }
    MenuItem.prototype.onStartCreatingNewNode = function (e) {
        if (e.button === constants_1.BUTTON_LEFT) {
            var props = this.props;
            var pos = this.offset;
            var offset = geometry_1.Vector2d.subtract({ x: e.clientX, y: e.clientY }, pos);
            if (window.onStartCreatingNewNode)
                window.onStartCreatingNewNode(props.nodeName ? props.nodeName : props.name, props.factory, pos, offset, props.classNames);
            else
                console.warn('window.onStartCreatingNewNode does not exist!');
        }
    };
    MenuItem.prototype.onMenuItemUpdate = function (element) {
        if (element === null)
            return;
        var rect = element.getBoundingClientRect();
        if (this.boundingRect === undefined ||
            this.boundingRect.x !== rect.x ||
            this.boundingRect.y !== rect.y) {
            this.boundingRect = rect;
            this.offset = { x: rect.left, y: rect.top };
            this.setState(function (state) { return state; });
        }
    };
    MenuItem.prototype.render = function () {
        return (React.createElement("div", { ref: this.onMenuItemUpdate.bind(this), className: "react-flow-editor-menu-item " + (this.props.classNames ? this.props.classNames.join(' ') : ''), onMouseDown: this.onStartCreatingNewNode.bind(this) },
            React.createElement("span", null, this.props.name)));
    };
    return MenuItem;
}(React.Component));
exports.MenuItem = MenuItem;
//# sourceMappingURL=menu.js.map